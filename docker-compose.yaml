x-logging:
  &loki-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    mode: non-blocking
    max-buffer-size: 4m
    loki-retries: "3"

services:

  grafana:
    image: grafana/grafana
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - 3000:3000
    logging: *loki-logging

  loki:
    image: grafana/loki
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -table-manager.retention-period=1d
      - -table-manager.retention-deletes-enabled=true
    ports:
      - "3100:3100"
    logging: *loki-logging

  tempo:
    image: grafana/tempo
    command:
      - --target=all
      - --storage.trace.backend=local
      - --storage.trace.local.path=/var/tempo
      - --auth.enabled=false
      - --compactor.compaction.block-retention=24h
    ports:
      - "8004:80"
    depends_on:
      - prometheus
    labels:
      - namespace=monitoring
      - prometheus.io/scrape=true
    logging: *loki-logging

  prometheus:
    image: quay.io/prometheus/prometheus
    user: root
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9090:9090"
    labels:
      - namespace=monitoring
    logging: *loki-logging

  alloy:
    image: grafana/alloy
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - --storage.path=/var/lib/alloy/data
      - /etc/alloy/config.alloy
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy
    ports:
      - 12345:12345
    logging: *loki-logging

  locust:
    build:
      context: ./locust
      dockerfile: Dockerfile
    ports:
      - 8089:8089
    volumes:
      - ./locust:/mnt/locust
    command: 
      - -f 
      - /mnt/locust/locustfile.py 
      - -H 
      - http://demo-api:8080
      - --autostart
      - --users=10
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://alloy:4317
      - OTEL_SERVICE_NAME=locust
    depends_on:
      - demo-api
    logging: *loki-logging

  demo-api:
    restart: unless-stopped
    build:
      context: ./demo-api
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://alloy:4317
      - OTEL_SERVICE_NAME=demo-api
      - OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST=.*
      - CACHE_TTL=1
    logging: *loki-logging
